@import "./colors";
@import "./positions";
@import "./animations";
@import "./utilities";
@use "sass:math";

// Elements
h1,
h2,
h3,
h4,
p,
body,
header,
footer {
  margin: 0px;
  padding: 0px;
}

header {
  $header-height: 101vh;
  $header-width: 100vw;
  $grid-col-width: $header-width / 3;
  $grid-row-height: $header-height / 3;
  grid-template-columns: repeat(3, #{$grid-col-width});
  grid-template-rows: repeat(3, #{$grid-row-height});
  grid-template-areas:
    "l-top top r-top"
    "l-mid mid r-mid"
    "l-bot bot r-bot";
  height: $header-height;
  width: $header-width;
  display: grid;
  align-content: center;
  background-color: $header-background;
}

footer {
  height: 10vh;
}

// Object Types
@mixin category($name, $val, $count) {
  .category-article-#{$name} {
    background-color: $val;
    color: black;
    height: 120vh;
    width: auto;
  }
  .category-#{$name} {
    fill: $val;
    z-index: $count;
    &:hover {
      fill: $val - 25;
    }
  }
}

$count: 10000;
@each $name, $val in $base-colors {
  @include category($name, $val, $count);
  $count: $count - 1;
}

// Objects
@mixin ball($size: 100px) {
  height: $size;
  width: $size;
  margin-right: $size / 10;
  &:hover {
    cursor: pointer;
  }
}

.ball {
  &-25 {
    @include ball(25px);
  }
  &-50 {
    @include ball(50px);
  }
  &-100 {
    @include ball(100px);
  }
}

@mixin ball-row($align: center, $animated: false, $margin: false) {
  display: flex;
  justify-content: $align;
  @if $animated & $margin {
    &,
    .ball-25 {
      animation-name: example;
      animation-duration: 2s;
    }
    .ball-50 {
      animation-name: example;
      animation-duration: 2s;
    }
    .ball-100 {
      animation-name: example;
      animation-duration: 2s;
    }
  } @else if $margin {
    &,
    .ball-25 {
      margin: $margin / 4 !important;
    }
    .ball-50 {
      margin: $margin / 2 !important;
    }
    .ball-100 {
      margin: $margin !important;
    }
  }
}

.ball-row {
  &-center {
    @include ball_row(center);
  }
  &-center-animated {
    @include ball_row(center, true, -25px);
  }
  &-center-stacked {
    @include ball_row(center, false, -25px);
  }
  &-left {
    @include ball_row(flex-start);
  }
  &-left-stacked {
    @include ball_row(flex-start, false, -25px);
  }
  &-right {
    @include ball_row(flex-end);
  }
  &-right-stacked {
    @include ball_row(flex-end, false, -25px);
  }
}

@mixin slide-pointer($size: 20px) {
  height: $size;
  width: auto;
  margin-left: $size / 4;
  margin-top: $size / 4;
}

.slide-pointer {
  &-10 {
    @include slide-pointer(10px);
  }
  &-20 {
    @include slide-pointer;
  }
  &-50 {
    @include slide-pointer(50px);
  }
}

@mixin slide-pointer-group(
  $flexDirection: column,
  $pointerDirection: 0deg,
  $margin: 5px
) {
  display: flex;
  flex-direction: $flexDirection;
  transform: rotate($pointerDirection);
  margin: $margin;
}

.slide-pointer-group {
  &-down {
    @include slide-pointer-group;
  }
  &-up {
    @include slide-pointer-group(column, 180deg);
  }
  &-left {
    @include slide-pointer-group(row, 90deg);
  }
  &-right {
    @include slide-pointer-group(row, 270deg);
  }
}

.tag {
  padding: 5px;
}
